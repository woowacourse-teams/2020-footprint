buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.3.1.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
    }
}

allprojects {
    apply plugin: 'java'
    group = 'wooteco.team.ittabi'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    sourceCompatibility = '1.8'
    repositories {
        mavenCentral()
    }
    jacoco {
        toolVersion = '0.8.5'

        jacocoTestReport {
            reports {
                html.enabled true
                xml.enabled true
                csv.enabled false
            }
            finalizedBy 'jacocoTestCoverageVerification'
        }
        jacocoTestCoverageVerification {
            violationRules {
                rule {
                    enabled = true
                    element = 'BUNDLE'
                    limit {
                        counter = 'INSTRUCTION'
                        value = 'COVEREDRATIO'
//                        minimum = 0.80
                        minimum = 0.00
                    }
                    limit {
                        counter = 'BRANCH'
                        value = 'COVEREDRATIO'
//                        minimum = 0.70
                        minimum = 0.00
                    }
                    excludes = []
                }
                rule {
                    enabled = true
                    element = 'CLASS'
                    limit {
                        counter = 'BRANCH'
                        value = 'COVEREDRATIO'
//                        minimum = 0.50
                        minimum = 0.00
                    }
                    excludes = [
                            '*.mailauth.*',
                            '*.config.*',
                            '*.MailAuthService',
                            '*.aws.*',
                            'wooteco.team.ittabi.legenoaroundhere.domain.award.PopularityPostCreatorAward',
                    ]
                }
            }
        }
    }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.apache.tika:tika-core:1.22'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'io.springfox:springfox-swagger2:2.9.2'
        implementation 'io.springfox:springfox-swagger-ui:2.9.2'
        implementation 'com.sun.mail:javax.mail:1.6.0'
        implementation 'org.springframework:spring-context-support:5.0.1.RELEASE'
        implementation 'io.jsonwebtoken:jjwt:0.9.1'
        implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.832')
        implementation 'com.amazonaws:aws-java-sdk-s3'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.security:spring-security-oauth2-client'
        implementation 'com.github.maricn:logback-slack-appender:1.4.0'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'io.rest-assured:rest-assured'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }
    sonarqube {
        properties {
            property "sonar.host.url", "http://sonarqube.capzzang.co.kr:8000"
            property "sonar.sources", "src"
            property "sonar.language", "java"
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
            property "sonar.test.inclusions", "**/*Test.java"
        }
    }
    test {
        useJUnitPlatform()
        finalizedBy 'jacocoTestReport'
    }
}
